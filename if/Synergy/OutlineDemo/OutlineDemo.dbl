import System
.ifdef dblnet
import System.IO
.endc
import HPdf

namespace OutlineDemo

public class OutlineDemo

    private static method PrintPage, void
        page, @HPdfPage 
        page_num, int 
        endparams
    proc
        begin
            data buf, string
            page.SetWidth(800)
            page.SetHeight(800)
            page.BeginText()
            page.MoveTextPos(30, 740)
            buf = ("Page:" + %string(page_num))
            page.ShowText(buf)
            page.EndText()
        end
    endmethod

    public static method Main, void
        endparams
    proc
        begin
            writes(15,("libhpdf-" + HPdfDoc.HPdfGetVersion()))
            try
            begin
                data pdf, @HPdfDoc, new HPdfDoc()
                data font, @HPdfFont
                data page0, @HPdfPage
                data page1, @HPdfPage
                data page2, @HPdfPage
                data root, @HPdfOutline
                data outline0, @HPdfOutline
                data outline1, @HPdfOutline
                data outline2, @HPdfOutline
                data dst, @HPdfDestination
                pdf.SetCompressionMode(HPdfDoc.HPDF_COMP_ALL)
                font = pdf.GetFont("Helvetica", ^null)
                pdf.SetPageMode(HPdfPageMode.HPDF_PAGE_MODE_USE_OUTLINE)
                page0 = pdf.AddPage()
                page0.SetFontAndSize(font, 30)
                PrintPage(page0, 1)
                page1 = pdf.AddPage()
                page1.SetFontAndSize(font, 30)
                PrintPage(page1, 2)
                page2 = pdf.AddPage()
                page2.SetFontAndSize(font, 30)
                PrintPage(page2, 3)
                root = pdf.CreateOutline(^null, "OutlineRoot", ^null)
                root.SetOpened(true)
                outline0 = pdf.CreateOutline(root, "page1", ^null)
                outline1 = pdf.CreateOutline(root, "page2", ^null)
                outline2 = pdf.CreateOutline(root, "ISO8859-2 text ÓÔÕÖ×ØÙ", pdf.GetEncoder("ISO8859-2"))
                dst = page0.CreateDestination()
                dst.SetXYZ(0, page0.GetHeight(), 1)
                outline0.SetDestination(dst)
                dst = page1.CreateDestination()
                dst.SetXYZ(0, page1.GetHeight(), 1)
                outline1.SetDestination(dst)
                dst = page2.CreateDestination()
                dst.SetXYZ(0, page2.GetHeight(), 1)
                outline2.SetDestination(dst)
                pdf.SaveToFile("OutlineDemo.pdf")
            end
            catch (e, @Exception)
            begin
                writes(15,e.Message)
            end
            endtry
        end
    endmethod
endclass
endnamespace
;; 
;;  * << Haru Free PDF Library 2.0.5 >> -- OutlineDemo.cs
;;  *
;;  * Copyright (c) 1999-2006 Takeshi Kanno <takeshi_kanno@est.hi-ho.ne.jp>
;;  *
;;  * Permission to use, copy, modify, distribute and sell this software
;;  * and its documentation for any purpose is hereby granted without fee,
;;  * provided that the above copyright notice appear in all copies and
;;  * that both that copyright notice and this permission notice appear
;;  * in supporting documentation.
;;  * It is provided "as is" without express or implied warranty.
;;  *
;;  */
;;  create default-font */
;;  add a new page object. */
;;  Add 3 pages to the document. */
;;  create outline root. */
;;  create outline with test which is ISO8859-2 encoding */
;;  create destination objects on each pages
;;              * and link it to outline items.
;;              */
;;  save the document to a file */

.main
;record
;	hnd,	@OutlineDemo
.proc
	open(15,o,'tt:')
	OutlineDemo.Main()
.end
